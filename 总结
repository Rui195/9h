Bloom Filter
    一个很长的二进制向量和一系列随机映射函数。布隆过滤器可以用于检索一个元素是否在一个集合中。
优点是空间效率和查询时间都远远超过一般的算法，缺点是有一定的误识别率和删除困难。

LRU Cache
两个要素： 大小，替换策略
Hash Table + Double LinkedList

O(1)查询
O(1)修改，更新

排序算法
   比较类排序和非比较类排序

初级排序—O(n^2)
1．	选择排序(Selection Sort)
每次找到最小值，然后放到待排序数组的起始位置。
2.  插入排序(Insertion Sort)
从前到后逐步构建有序序列；对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。
       3.  冒泡排序(Bubble Sort)
           嵌套循环，每次查看相邻的元素如果逆序，则交换。

  
高级排序—O(N*LogN)
   快速排序(Quick Sort)
        数组取标杆pivot，将小元素放pivot左边，大元素放右边，然后依次对右边和右边的子数组继续快排；以达到整个序列有序。
   归并排序(Merge Sort)—分治
1.把长度为n的输入序列分成两个长度n/2的子序列；
2.对这两个子序列分别采用归并排序；
3.将两个排序好的子序列合并在一个最终的排序序列。

归并：先排序左右子数组，然后合并两个有序子数组
快排：先调配出左右子数组，然后对于左右子树组进行排序
归并和快排具有相似性，但步骤顺序相反

        堆排序(Heap Sort) –堆插入O(logN)，取最大、最小值O(1)
1.数组元素依次建立小顶堆
2.依次取堆顶元素，并删除


特殊排序
          计数排序
          桶排序
          基数排序
